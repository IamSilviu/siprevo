
//
// -------------------------------------------------------------------------------[ .METHOD
//
.METHOD.OPTIONS -> Const = ?Method;
.METHOD.GET -> Const = ?Method;
.METHOD.HEAD -> Const = ?Method;
.METHOD.POST -> Const = ?Method;
.METHOD.PUT -> Const = ?Method;
.METHOD.DELETE -> Const = ?Method;
.METHOD.TRACE -> Const = ?Method;
.METHOD.CONNECT -> Const = ?Method;
.METHOD.extension-method -> Const = ?Method, Extension, 20;

//
// -------------------------------------------------------------------------------[ .PRODUCT
//
.PRODUCT -> LookupRange = ?<Product>.Value;
.PRODUCT.token -> LookupRange = ?<Product>.Name;
.PRODUCT.product-version.token -> LookupRange = ?<Product>.Version;

//
// -------------------------------------------------------------------------------[ Request-Line
//
req.Request-Line.Method -> Group = , METHOD;
req.Request-Line.Method.extension-method -> LookupRange = MethodBytes;
req.Request-Line.Request-URI -> LookupRange = RequestUri;
req.Request-Line.HTTP-Version.DIGIT -> Decimal = HttpVersion;

//
// -------------------------------------------------------------------------------[ Host
//
req.request-header.Host.host -> LookupRange = Host.Host;
req.request-header.Host.port.DIGIT -> Decimal = Host.Port;

//
// -------------------------------------------------------------------------------[ Content-Type
//
req.entity-header.Content-Type.media-type.type -> LookupRange = ContentType.Type;
req.entity-header.Content-Type.media-type.subtype -> LookupRange = ContentType.Subtype;
req.entity-header.Content-Type.media-type -> LookupRange = ContentType.Value;

//
// -------------------------------------------------------------------------------[ Content-Length
//
req.entity-header.Content-Length.DIGIT -> Decimal = ContentLength;

//
// -------------------------------------------------------------------------------[ Referer
//
req.request-header.Referer.absoluteURI -> LookupRange = Referer;
req.request-header.Referer.relativeURI -> LookupRange = Referer;

//
// -------------------------------------------------------------------------------[ Upgrade
//
req.general-header.Upgrade.websocket -> Const = Upgrade[Upgrade];
req.general-header.Upgrade.product.token -> Const = Upgrade[Upgrade], Other, 20;
req.general-header.Upgrade.HCOLON.: -> Count = Upgrade, 8, -1;
req.general-header.Upgrade.COMMA., -> Count = Upgrade, 8, -1;

//
// -------------------------------------------------------------------------------[ Sec-WebSocket-Key
//
req.request-header.Sec-WebSocket-Key.base64-value-non-empty -> LookupRange = SecWebSocketKey;

//
// -------------------------------------------------------------------------------[ Sec-WebSocket-Extensions
//
req.request-header.Sec-WebSocket-Extensions.extension-list.extension.extension-token -> LookupRange = SecWebSocketExtensions[SecWebSocketExtensions];
req.request-header.Sec-WebSocket-Extensions.HCOLON.: -> Count = SecWebSocketExtensions, 8, -1;
req.request-header.Sec-WebSocket-Extensions.extension-list.COMMA., -> Count = SecWebSocketExtensions, 8, -1;

//
// -------------------------------------------------------------------------------[ Sec-WebSocket-Protocol-Client
//
req.request-header.Sec-WebSocket-Protocol-Client.token -> LookupRange = SecWebSocketProtocol[SecWebSocketProtocol];
req.request-header.Sec-WebSocket-Protocol-Client.HCOLON.: -> Count = SecWebSocketProtocol, 8, -1;
req.request-header.Sec-WebSocket-Protocol-Client.COMMA., -> Count = SecWebSocketProtocol, 8, -1;

//
// -------------------------------------------------------------------------------[ Sec-WebSocket-Version-Client
//
req.request-header.Sec-WebSocket-Version-Client.version -> Decimal = SecWebSocketVersion;

//
// -------------------------------------------------------------------------------[ Cookie
//
req.cookie-header.cookie-string.cookie-pair.cookie-name -> LookupRange = Cookie[Cookie].Name;
req.cookie-header.cookie-string.cookie-pair.cookie-value.cookie-octet -> LookupRange = Cookie[Cookie].Value;
req.cookie-header.HCOLON.: -> Count = Cookie, 8, -1;
req.cookie-header.cookie-string.; -> Count = Cookie, 8, -1;

//
// -------------------------------------------------------------------------------[ If-Match
//
req.request-header.If-Match.* -> LookupRange = IfMatches[IfMatches];
req.request-header.If-Match.entity-tag.opaque-tag.quoted-string.qdtext -> Range = IfMatches[IfMatches];
req.request-header.If-Match.entity-tag.opaque-tag.quoted-string.quoted-pair -> Range = IfMatches[IfMatches];
req.request-header.If-Match.HCOLON.: -> Count = IfMatches, 8, -1;
req.request-header.If-Match.COMMA., -> Count = IfMatches, 8, -1;


//
// -------------------------------------------------------------------------------[ .CREDENTIALS
//

req.request-header.Authorization.credentials.digest-response.username.username

.CREDENTIALS.Digest -> Const = ?<Credentials>.AuthScheme;
//.CREDENTIALS.NTLM -> Const = ?<Credentials>.AuthScheme;
//.CREDENTIALS.Kerberos -> Const = ?<Credentials>.AuthScheme;
//.CREDENTIALS.TLS-DSK -> Const = ?<Credentials>.AuthScheme;
.CREDENTIALS.digest-response.username.username-value.quoted-string.qdtext -> Range = ?<Credentials>.Username;
.CREDENTIALS.digest-response.username.username-value.quoted-string.quoted-pair -> Range = ?<Credentials>.Username
.CREDENTIALS.digest-response.realm.realm-value.quoted-string.qdtext -> Range = ?<Credentials>.Realm;
.CREDENTIALS.digest-response.realm.realm-value.quoted-string.quoted-pair -> Range = ?<Credentials>.Realm;
//.CREDENTIALS.msspi-response.msspi-resp.realm.realm-value.quoted-string.qdtext -> Range = ?<Credentials>.Realm;
//.CREDENTIALS.msspi-response.msspi-resp.realm.realm-value.quoted-string.quoted-pair -> Range = ?<Credentials>.Realm;
.CREDENTIALS.digest-response.nonce.nonce-value.quoted-string.qdtext -> Range = ?<Credentials>.Nonce;
.CREDENTIALS.digest-response.nonce.nonce-value.quoted-string.quoted-pair -> Range = ?<Credentials>.Nonce;
.CREDENTIALS.digest-response.digest-uri.digest-uri-value -> Range = ?<Credentials>.DigestUri;
.CREDENTIALS.digest-response.response.request-digest.LHEX -> Range = ?<Credentials>.Response;
.CREDENTIALS.digest-response.response.= -> Bool = ?<Credentials>.HasResponse;
.CREDENTIALS.digest-response.algorithm.MD5 -> Const = ?<Credentials>.AuthAlgorithm;
.CREDENTIALS.digest-response.algorithm.MD5-sess -> Const = ?<Credentials>.AuthAlgorithm;
//.CREDENTIALS.digest-response.algorithm.SHA256-sess -> Const = ?<Credentials>.AuthAlgorithm;
.CREDENTIALS.digest-response.algorithm.token -> Const = ?<Credentials>.AuthAlgorithm, Other, 20;
.CREDENTIALS.digest-response.cnonce.cnonce-value.nonce-value.quoted-string.qdtext -> Range = ?<Credentials>.Cnonce;
.CREDENTIALS.digest-response.cnonce.cnonce-value.nonce-value.quoted-string.quoted-pair -> Range = ?<Credentials>.Cnonce;
.CREDENTIALS.digest-response.opaque.quoted-string.qdtext -> Range = ?<Credentials>.Opaque;
.CREDENTIALS.digest-response.opaque.quoted-string.quoted-pair -> Range = ?<Credentials>.Opaque;
//.CREDENTIALS.msspi-response.msspi-resp.opaque.quoted-string.qdtext -> Range = ?<Credentials>.Opaque;
//.CREDENTIALS.msspi-response.msspi-resp.opaque.quoted-string.quoted-pair -> Range = ?<Credentials>.Opaque;
.CREDENTIALS.digest-response.message-qop.qop-value -> Range = ?<Credentials>.MessageQop;
//.CREDENTIALS.msspi-response.msspi-resp.qop-options.qop-value -> Range = ?<Credentials>.MessageQop;
.CREDENTIALS.digest-response.nonce-count.nc-value.LHEX -> Hex = ?<Credentials>.NonceCount; Range = ?<Credentials>.NonceCountBytes;
//.CREDENTIALS.msspi-response.msspi-resp.targetname.target-value.ntlm-target-val -> Range = ?<Credentials>.Targetname;
//.CREDENTIALS.msspi-response.msspi-resp.targetname.target-value.kerberos-target-val -> Range = ?<Credentials>.Targetname;
//.CREDENTIALS.msspi-response.msspi-resp.targetname.target-value.tls-dsk-target-val.token -> Range = ?<Credentials>.Targetname;
//.CREDENTIALS.msspi-response.msspi-resp.version.version-value.DIGIT -> Decimal = ?<Credentials>.Version;
//.CREDENTIALS.msspi-response.msspi-resp.gssapi-data.gssapi-data-value.quoted-string.qdtext -> Range = ?<Credentials>.GssapiData;
//.CREDENTIALS.msspi-response.msspi-resp.gssapi-data.gssapi-data-value.quoted-string.quoted-pair -> Range = ?<Credentials>.GssapiData;
//.CREDENTIALS.msspi-response.msspi-resp.gssapi-data.gssapi-data-value.quoted-string -> Bool = ?<Credentials>.HasGssapiData;
//.CREDENTIALS.msspi-response.msspi-resp.crand.crand-val.LHEX -> Hex = ?<Credentials>.Crand;
//.CREDENTIALS.msspi-response.msspi-resp.cnum.cnum-value.DIGIT -> Decimal = ?<Credentials>.Cnum;
//.CREDENTIALS.msspi-response.msspi-resp.msspi-resp-data.msspi-resp-data-value.quoted-string.qdtext -> Range = ?<Credentials>.Response;
//.CREDENTIALS.msspi-response.msspi-resp.msspi-resp-data.msspi-resp-data-value.quoted-string.quoted-pair -> Range = ?<Credentials>.Response;
//.CREDENTIALS.msspi-response.msspi-resp.msspi-resp-data.msspi-resp-data-value.quoted-string -> Bool = ?<Credentials>.HasResponse;

//
// -------------------------------------------------------------------------------[ Authorization
//
req.request-header.Authorization.HCOLON.: -> Count = AuthorizationCount, 10, -1;
req.request-header.Authorization.credentials -> Group = Authorization[AuthorizationCount], CREDENTIALS;


//
//
//
//////////////////////////////////////////////////////////////////////////////////[...............]
// DRAFTS
//req.general-header.Upgrade.product -> Group = Upgrades[UpgradeCount], PRODUCT;
//
//req.general-header.Upgrade.websocket -> Const = Upgrades[UpgradeCount].Upgrate;
//req.general-header.Upgrade.product.token -> Const = Upgrades[UpgradeCount].Upgrate, Other, 20; LookupRange = Upgrades[UpgradeCount].Name;
//req.general-header.Upgrade.product -> LookupRange = Upgrades[UpgradeCount].Value;
//req.general-header.Upgrade.product.product-version.token -> LookupRange = Upgrades[UpgradeCount].Version;
